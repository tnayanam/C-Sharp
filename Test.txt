A namespace is used to organize classes, other namespaces, delegates, interfaces. etc. hello
By default, LINQ is deferred execution

Deferred Execution: Query is not executed at the point of declaration
	Example: Select, SelectMany, Take, Skip
Immediate Execution: Query is executed at the point of declaration
	Example: First, Last, SingleToList, ToArray
	
	Benefits: Query construction and execution is decoupled, thus we can decouple them.
			  A deferred execution query is reevaluated whtn ran thus it alwasy gets the latest data.	
			  Performance Kill is the down point.
			  
Example
DataContext context = new DataContext();
var query = from customer in context.Customers
 where customer.City == "Delhi"
 select customer; // Query does not execute here
 
 foreach (var Customer in query) // Query executes here
 {
 Console.WriteLine(Customer.Name);
 }
//
https://app.pluralsight.com/player?course=msbuild&author=david-starr&name=msbuild-1&clip=5&mode=live

// MS-Build: 
It is a tool that is used by VS to compile and build the solution.
It reads the XML files.
In order to create a msbuild file.
open VS create a new file with extension .msbuild
and open VS Command Prompt: and go to that file location and type msbuild <filename>.msbuild
and it will build.
Various Tags to be used in the file:
1. Project Name= Just a namespace
2. Target -> Container for Set of instructions.
3. Message -> if we want to display some message when file builds. for output
4. We can have multiple targets but by default the first target always gets hit.
5. So in our example we will see output of target HelloWOrld1 only.
6. But suppose we want to see the output of second appearing target, then in that case use velow:
msbuild HelloWorld.msbuild /target:HelloWOrld2  so now despite the target one should be invoked now its getting overidden.
7. Default targets: setting this makes that target to be executed as default
<Project DefaultTargets="HelloWorld2" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
setting like above and running msbuild <filename>.msbuild will run the deafult target.
8. but even after settign default target you want to oeverwrite it then you will use again the same command as
msbuild HelloWorld.msbuild /target:HelloWOrld2
9. So now suppose we dont want to type command line command to go to a particular target we can create another file to do so
So first create a file with name <filename>.rsp

and now go to command prompt and type: msbuild HelloWorld.msbuild @<filenaeme>.rsp
-- to run multiple targets all you need to do is 
/target:HelloWorld2,HelloWorld1
-- for debugging purpose sometimes you want to know alot more. so add this command in .rsp file 
/v:detailed     => verbosity as DETAILED!!
this wil provide more info in the console and help in debugging.

Now Variabls, they are stored under property group tag

OUTPUT: Hello, Tanuj! Full Name: Tanuj Nayanam

Now you can even pass the varibale from command prompt like below:
msbuild HelloWorld.msbuild @blah.rsp /p:Name=Lisa

Now the output will be:
Hello, Lisa! Full Name: Lisa Nayanam
See the reserved property.
Output:  MSBuildProjectDirectory : C:\Users\tnayanam\Desktop\Demo\C-Sharp

Basically in proerty group we define the variable
in Itemgroup we actually access the property
in Target we actually loooop through and execute.
here output is 

  C:\Users\tnayanam\Desktop\Demo\C-Sharp\A.txt;C:\Users\tnayanam\Desktop\Demo\C-Sharp\B.txt;C:\Users\tnayanam\Desktop\D
  emo\C-Sharp\Test.txt

all the text files.





